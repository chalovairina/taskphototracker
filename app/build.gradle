plugins {
    id 'com.android.application'
    id 'kotlin-android'

    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'

    id 'com.google.secrets_gradle_plugin' version '0.4'

    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.chari.ic.todoapp"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            // to enable incremental processing
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
                arguments += ["dagger.gradle.incremental": "true"]
                arguments += ["databinding.incremental":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDirs += sharedTestDir
        }
        androidTest {
            java.srcDirs += sharedTestDir
        }
    }

    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
    // w/o this causes for instrumented tests NoSuchMethodError: No static method loadSingleServiceOrNull(Ljava/lang/Class;)Ljava/lang/Object; in class Landroidx/test/internal/platform/ServiceLoaderWrapper
    configurations.all {
        resolutionStrategy {
            force 'androidx.test:monitor:1.4.0'
        }
    }
}

dependencies {

//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation "androidx.annotation:annotation:$androidXAnnotations"

    // Coordinator Layout
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'

    // Material Components
    implementation "com.google.android.material:material:$materialVersion"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigationVersion"

    // Room components
//    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    // Data binding
    kapt 'com.android.databinding:compiler:3.1.4'
    kapt 'androidx.databinding:databinding-common:7.0.1'

    // ShimmerLayout
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // DataStore
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // Recyclerview
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.31-alpha'
    kapt 'com.google.dagger:hilt-android-compiler:2.31-alpha'

    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"
//    kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$archLifecycleVersion"

    // Image Loading library Coil
    implementation 'io.coil-kt:coil:0.13.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // Jsoup
    implementation 'org.jsoup:jsoup:1.13.1'

    // for HTTP requests
    implementation 'com.android.volley:volley:1.2.0'

    // image loading library
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'androidx.exifinterface:exifinterface:1.1.0-alpha01'

    // Testing

    // Unit testing

    // Required -- JUnit 4 framework
    testImplementation "junit:junit:$junitVersion"

//    implementation "androidx.test:core:$androidXTestCoreVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    // Robolectric
//    testImplementation "org.robolectric:robolectric:$robolectricVersion"
//    androidTestImplementation "org.robolectric:robolectric:$robolectricVersion"
//    androidTestImplementation ("org.robolectric:robolectric:$robolectricVersion") {
//        exclude group: "org.apache.maven.wagon"
//        exclude group: "org.apache.maven"
//    }
    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // HamCrest
    implementation 'org.hamcrest:hamcrest:2.2'
//    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    //Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
//    testImplementation('org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0') {
        // conflicts with mockito due to direct inclusion of byte buddy
//    exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
//    }

    // Instrumented testing

    // Core library
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
//    androidTestImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion") {
        // conflicts with mockito due to direct inclusion of byte buddy
//        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
//    }
    androidTestImplementation "androidx.test:core:$androidXTestCoreVersion"
    debugImplementation "androidx.fragment:fragment-testing:$fragmentVersion"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'

    // Mockito
//    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
//    runtimeOnly "org.mockito:mockito-android::$mockitoVersion"
//    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"

    // Assertions
    androidTestImplementation "androidx.test.ext:junit:$androidXTestExtKotlinRunnerVersion"
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
    androidTestImplementation 'com.google.truth:truth:1.0'

    // Espresso dependencies
    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'

//    implementation platform('com.google.firebase:firebase-bom:28.4.0')
}