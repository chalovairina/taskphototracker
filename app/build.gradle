plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'

    id 'com.google.secrets_gradle_plugin' version '0.4'

    id 'com.google.gms.google-services'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.chari.ic.todoapp"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.chari.ic.todoapp.HiltTestRunner"

        javaCompileOptions {
            // to enable incremental processing
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
//                arguments += ["dagger.gradle.incremental": "true"]
//                arguments += ["databinding.incremental":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11

        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    testOptions.unitTests {
        includeAndroidResources = true
        // for using idling resource in tests
        returnDefaultValues = true
    }
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDirs += sharedTestDir
        }
        androidTest {
            java.srcDirs += sharedTestDir
        }
    }

    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
    // w/o this causes for instrumented tests NoSuchMethodError: No static method loadSingleServiceOrNull(Ljava/lang/Class;)Ljava/lang/Object; in class Landroidx/test/internal/platform/ServiceLoaderWrapper
    configurations.all {
        resolutionStrategy {
            force 'androidx.test:monitor:1.4.0'
        }
    }
}

dependencies {
    def coroutines_version = "1.5.0"
    def junit_version = "4.13.2"
    def mockito_version = "3.12.4"
    def espresso_version = '3.4.0'
    def room_version = "2.3.0"
    def firebase_version = "28.4.1"
    def glide_version = "4.12.0"
    def worker_version = "2.6.0"


    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.annotation:annotation:1.3.0-alpha01'


    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigationVersion"

    // Room components
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Data binding
    kapt 'com.android.databinding:compiler:3.1.4'
    kapt 'androidx.databinding:databinding-common:7.0.2'

    // ShimmerLayout
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // DataStore
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // Recyclerview
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Lifecycle
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.1'

    // Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'


    // Testing

    implementation 'org.hamcrest:hamcrest:2.2'

    // Unit testing

    // Required -- JUnit 4 framework
    testImplementation "junit:junit:$junit_version"

    testImplementation "org.mockito:mockito-core:$mockito_version"

    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Instrumented testing

    androidTestImplementation "junit:junit:$junit_version"
    // for RunWith(AndroidJUnit4::class)
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    // to mock NavController
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"

    // for InstantTaskExecutorRule
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // to launchFragmentInContainer
    debugImplementation 'androidx.fragment:fragment-testing:1.3.6'

    // Assertions
    // contains / doesNotContains used
    androidTestImplementation 'com.google.truth:truth:1.0'

    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    // for recyclerViewActions
    androidTestImplementation ("androidx.test.espresso:espresso-contrib:$espresso_version"){
            exclude module: "protobuf-lite"
}

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"

    // Dagger-Hilt
    androidTestImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$dagger_hilt_version"

    
    // FIREBASE
    implementation platform("com.google.firebase:firebase-bom:$firebase_version")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'

    // CircleImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
//    kapt "com.github.bumptech.glide:compiler:$glide_version"

//    for java time lib
    implementation coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")

// Worker
    implementation "androidx.work:work-runtime-ktx:$worker_version"
}